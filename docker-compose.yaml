version: '3'
services:
  model-mlflow:
    #build: ./deploy-mlflow
    image: luntaixia/cnn-summarizer-mlflow
    ports:
      - 5003:5003
    restart: on-failure

  backend-mlflow:
    #build: ./backend-fastapi
    image: luntaixia/cnn-summarizer-backend
    ports:
      - 5000:5000
    environment:
      MODEL_URI: model-mlflow
    depends_on:
      - model-mlflow
    healthcheck:
      test: |
        python -c "import requests; r = requests.get('http://localhost:5000'); assert r.status_code == 200"
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always

  backend-standalone:
    #build: ./deploy-fastapi
    image: luntaixia/cnn-summarizer-local
    ports:
      - 8000:8000
    healthcheck:
      test: |
        python -c "import requests; r = requests.get('http://localhost:8000'); assert r.status_code == 200"
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always

  mysql:
    image: mysql:latest
    volumes:
      - ${VOLUME_MAPPING_PATH:-./volume-mapping}/mysql-storage:/var/lib/mysql
    environment:
      - MYSQL_ROOT_USER=${MYSQL_ROOT_USER:-admin}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-admin}
    ports:
      - 3306:3306
    command:
      --character-set-server=utf8mb4
      --default-authentication-plugin=caching_sha2_password
      --local-infile=1
      --secure-file-priv=""
    healthcheck:
      test: mysqladmin ping -h localhost -u $$MYSQL_ROOT_USER --password=$$MYSQL_ROOT_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  monitoring:
    #build: ./monitoring
    image: luntaixia/cnn-summarizer-monitoring
    volumes:
      - ./secrets.toml:/app/.secrets/secrets.toml # for streamlit secrets
      - ./samples:/app/sample # for loading samples
    ports:
      - 9020:9020
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: |
        python -c "import requests; r = requests.get('http://localhost:9020'); assert r.status_code == 200"
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always

  grafana:
    image: grafana/grafana-oss
    container_name: grafana-server
    restart: always
    depends_on:
      - mysql
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      #- GF_INSTALL_PLUGINS=grafana-worldmap-panel  # world map plugin
    ports:
      - '3000:3000'
    volumes:
      - ${VOLUME_MAPPING_PATH:-./volume-mapping}/grafana_data:/var/lib/grafana
    command: bash -c "docker login -u user -p password && /run.sh" # fix permission error using root user
    user: "root:root"

  frontend:
    #build: ./frontend-streamlit
    image: luntaixia/cnn-summarizer-frontend
    ports:
      - 8501:8501
    volumes:
      - ./secrets.toml:/app/.streamlit/secrets.toml # for streamlit secrets
    depends_on:
      backend-mlflow:
        condition: service_healthy
      backend-standalone:
        condition: service_healthy
      monitoring:
        condition: service_healthy
    restart: on-failure